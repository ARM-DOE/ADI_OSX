################################################################################
# COPYRIGHT (C) 2000 Battelle Memorial Institute. 
#    All Rights Reserved. (Now, with this out of the way...) 
#
# RCS INFORMATION: 
#   $RCSfile: Makerules.vap,v $ 
#   $Revision: 1.12 $ 
#   $Author: younkin $ 
#   $Locker:  $ 
#   $Date: 2008/05/22 18:46:06 $ 
#   $State: armcm-swawtdev-2.4-0 $ 
#   $Name: armcm-swawtdev-2#4-0 $ 
#
# This file was generated by genmake -- for use wth GNU make
#
# PURPOSE:
#   To provide standard make rules for this component
#
# DESCRIPTION:
#   <Provide a brief description of the contents of this makefile>
#
# GENMAKE COMMAND USED TO GENERATE THIS MAKEFILE:
#   COMMAND:   -comp vap -type rule -lang c
#
# LIMITATIONS:
#
#------------------------------------------------------------------------
#
# Interesting info taken from "GNU Make" by Stallman and McGrath.
#
#   These are the Automatic variables used in gnumake (p112):
#
#   $@ - file name of the target of the rule
#   $% - target member name if archive (eg $% = bar.o given foo.a(bar.o))
#   $< - name of the first dependency
#   $^ - names of all dependencies (with spaces)
#   $? - names of all dependencies newer than the target (with spaces)
#   $* - stem of target in implicit rule match (eg $* = x given a.x.b and a.%.b)
#
#   Some useful variables with built-in values (p107-108, unuseful excluded)
#
#   AR = ar           (archive maintaining program -- we will use this)
#   ARFLAGS = rv      (flags for ar -- we will use/suppliment this)
#   CC = cc           (C compiler -- we will use this)
#   FC = f77          (Fortran compiler -- we may use this)
#   CPP = $(CC) -E    (C preprocessor -- we may use this)
#   CXX = g++         (C++ compiler -- we define CC instead)
#   CO = co           (Extracting files from RCS -- we will use this)
#   RM = rm -f        (Command to remove a file -- we will use this I guess)
################################################################################

################################################################################
# RULES SECTION:
#
# This section is for any specific targets you'd like to have in your makefile
# Standard gnu-make rules apply here.
#
# Example:  obviously the pound signs shouldn't be here for a real world thing
#
# quicklook:  idl something.pro
#
# Now you can say 'make quicklook' at the command line and this target would
# be invoked, which could in turn invoke anything in any of the templates.
#
# You could then set AUX_ALL=quicklook and that would cause quicklooks to be
# built (if they were out of date) anytime you said make with no arguments.
#
# SO...PUT YOUR RULES HERE
################################################################################


################################################################################
#############################  SPECIFIC RULES  #################################
###########################          ||          ###############################
###########################          ||          ###############################
###########################          \/          ###############################

$(BYTECODE_DIR)/$(OUT_NAME)_batch.sav: $(IDL_SRCS)

quicklook: $(IDL_SAV_FILE)

########################             /\             ############################
########################             ||             ############################
########################             ||             ############################
########################    END OF SPECIFIC RULES   ############################
################################################################################
