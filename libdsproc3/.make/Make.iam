################################################################################
# RCS INFORMATION: 
#   $Author: younkin $ 
#   $Locker:  $ 
#   $Revision: 1.46 $ 
#   $Date: 2008-03-05 22:56:04 $ 
#   $Name: not supported by cvs2svn $ 
#   $State: Exp $ 
#
#------------------------------------------------------------------------
#
# PURPOSE:
#   To provide standard rules across all components of the system.
#
# DESCRIPTION:
#   <Provide a brief description of the rules in this make include file>
#
#------------------------------------------------------------------------
#
# Interesting info taken from "GNU Make" by Stallman and McGrath.
#
#   These are the Automatic variables used in gnumake (p112):
#
#   $@ - file name of the target of the rule
#   $% - target member name if archive (eg $% = bar.o given foo.a(bar.o))
#   $< - name of the first dependency
#   $^ - names of all dependencies (with spaces)
#   $? - names of all dependencies newer than the target (with spaces)
#   $* - stem of target in implicit rule match (eg $* = x given a.x.b and a.%.b)
#
#   Some useful variables with built-in values (p107-108, unuseful excluded)
#
#   AR = ar           (archive maintaining program -- we will use this)
#   ARFLAGS = rv      (flags for ar -- we will use/suppliment this)
#   CC = cc           (C compiler -- we will use this)
#   FC = f77          (Fortran compiler -- we may use this)
#   CPP = $(CC) -E    (C preprocessor -- we may use this)
#   CXX = g++         (C++ compiler -- we define CC instead)
#   CO = co           (Extracting files from RCS -- we will use this)
#   RM = rm -f        (Command to remove a file -- we will use this I guess)
#
# LIMITATIONS:
#
################################################################################


################################################################################
# Definition of variables
################################################################################

REMOVE       := $(RM)r
IAM_LC       := $(shell echo $(IAM_DEVELOPER) | tr "[:upper:]" "[:lower:]")
IAM_UC       := $(shell echo $(IAM_DEVELOPER) | tr "[:lower:]" "[:upper:]")
IAM_HOME     := $($(IAM_UC)_HOME)

BUILD_SRC    := build.perl
BUILD        := $(patsubst %.perl,%,$(BUILD_SRC))
BUILD_DIR    := $(dir $(shell find $(IAM_HOME)/src -type f -name $(BUILD_SRC)))

MAKE_DEPS    := $(shell find $(IAM_HOME)/src -name Makefile.deps)
MAKE_GS      := $(shell find $(IAM_HOME)/src -name Makedefs.gs)

AUTODOC_DIRS := $(shell find $(IAM_HOME) -name autodoc)
BS_DIR       := $(shell find $(IAM_HOME)/src -type d -name bs1)
PAPI_DIR     := $(shell find $(IAM_HOME)/src -type d -name papi)

BIN_DIR      := $(IAM_HOME)/bin
LIB_DIR      := $(IAM_HOME)/lib
PM_DIR       := $(LIB_DIR)/$(IAM_UC)

BS_SRCS      := $(notdir $(wildcard $(BS_DIR)/*.*))
BS_BINS      := $(patsubst %, $(BIN_DIR)/%, $(basename $(BS_SRCS)))

PAPI_SRCS    := $(notdir $(shell ls $(PAPI_DIR)/*.perl))
PAPI_MODS    := $(patsubst %.perl, $(PM_DIR)/%.pm, $(PAPI_SRCS))

ifndef IAM_REBRANDING
	CLEAN_TGT   = clean_all_dirs
endif


################################################################################
# Rules for cleaning
################################################################################

clean_autodoc_dirs:
	@echo "####################################################################"
	@echo "# Cleaning autodoc directories"
	@echo "####################################################################"
	@for dir in $(AUTODOC_DIRS) ; do \
		$(REMOVE) $$dir ; \
	done

clean_compile_dirs:
	@echo "####################################################################"
	@echo "# Cleaning compile directories"
	@echo "####################################################################"
	$(REMOVE) $(IAM_HOME)/bin/*
	$(REMOVE) $(IAM_HOME)/sbin/*
	$(REMOVE) $(IAM_HOME)/lib/$(IAM_UC)/*
	$(REMOVE) $(IAM_HOME)/www/Root/$(IAM_LC)/cgi-bin/*

clean_dep_files:
	@echo "####################################################################"
	@echo "# Removing all generated makefiles"
	@echo "####################################################################"
	$(REMOVE) $(MAKE_DEPS) $(MAKE_GS)

clean_all_dirs:  clean_autodoc_dirs clean_compile_dirs clean_dep_files


################################################################################
# Rules for announcing what's going on
################################################################################

announce_pms:
	@echo "####################################################################"
	@echo "# Copying perl modules:"
	@echo "#    Source:       $(PAPI_DIR)"
	@echo "#    Destination:  $(PM_DIR)"
	@echo "####################################################################"

announce_bs:
	@echo "####################################################################"
	@echo "# Copying bootstrap scripts:"
	@echo "#    Source:       $(BS_DIR)"
	@echo "#    Destination:  $(BIN_DIR)"
	@echo "####################################################################"


################################################################################
# Rules for building stuff
################################################################################

buildable:
	@echo "####################################################################"
	@echo "# Checking for enough information to do a rebuild"
	@echo "####################################################################"
	@if [ -z "$(IAM_DEVELOPER)" ] ; then \
		echo "IAM_DEVELOPER not set:   use setenv IAM_DEVELOPER <brandname>" ; \
		exit 1 ; \
	elif [ -z "$(IAM_HOME)" ] ; then \
		echo "$(IAM_UC)_HOME not set:  use setenv $(IAM_UC)_HOME <root_path>" ; \
		exit 1 ; \
	fi

do_pms:  announce_pms $(PAPI_MODS)

do_bs:  announce_bs $(BS_BINS)

rebuild_iam: buildable $(CLEAN_TGT) do_pms do_bs
	@echo "####################################################################"
	@echo "# Building $(BUILD) command"
	@echo "####################################################################"
	@cd $(BUILD_DIR) ; make $(BIN_DIR)/$(BUILD)
	@echo "####################################################################"
	@echo "= Creating setup file"
	@echo "####################################################################"
	$(BIN_DIR)/getsetup -def
	@echo "####################################################################"
	@echo "# Issuing full build command"
	@echo "####################################################################"
	@touch $(PAPI_DIR)/*.perl
	@touch $(BS_DIR)/*.*
	$(BIN_DIR)/$(BUILD) -comp $(IAM_LC)


################################################################################
# Rules for creating files of a certain type
################################################################################

$(PM_DIR)/%.pm:
	@mkdir -p $(PM_DIR)
	@echo "copy   $@"
	@cp $(PAPI_DIR)/$(notdir $(basename $@)).* $@
	@chmod 644 $@

$(BIN_DIR)/%:
	@mkdir -p $(BIN_DIR)
	@echo "copy   $@"
	@cp $(BS_DIR)/$(notdir $(basename $@)).* $@
	@chmod 755 $@
